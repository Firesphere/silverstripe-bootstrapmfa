# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: brettt89/silverstripe-web:7.1-ssp
        environment:
          - SS_DATABASE_CLASS=MySQLPDODatabase
          - SS_DATABASE_SERVER=127.0.0.1
          - SS_DATABASE_USERNAME=root
          - SS_DATABASE_PASSWORD=ubuntu
          - SS_DATABASE_NAME=circle_test
          - SS_ENVIRONMENT_TYPE=test
          - YUBIAUTH_CLIENTID=12345
          - YUBIAUTH_APIKEY=VGhpc0lzUmVhbGx5QVZhbGlkS2V5
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_ROOT_PASSWORD=ubuntu
          - MYSQL_DATABASE=circle_test
          - MYSQL_HOST=127.0.0.1

    working_directory: ~/var/www

    steps:
      - checkout
      - run: apt-get install netcat -y
      # Install additional requirements
      - run:
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === '93b54496392c062774670ac18b134c3b3a95e5a5e5c8f1a9f115f203b75bf9a129d5daa8ba6a13e2cc8a1da0806388a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      # Composer Cache, Yarn and non-vendor modules
      - restore_cache:
          keys:
            - v2-cache-{{ checksum "composer.lock" }}-{{ checksum "readme.md" }}
            # fallback to using the latest cache if no exact match is found
            - v2-cache-
      # update, because why not
      - run: php composer.phar install
      # Save all dependencies to cache
      - save_cache:
          key: v2-cache-{{ checksum "composer.lock" }}-{{ checksum "readme.md" }}
          paths:
            - assets
            - vendor
            - mysite
      - run: until nc -z -v -w30 127.0.0.1 3306; do sleep 1; done
      - run: vendor/bin/sake dev/build

      # run tests!
      - run: vendor/bin/phpunit --coverage-clover=coverage.xml -d memory_limit=512M tests/unit
      - run: bash <(curl -s https://codecov.io/bash) -f coverage.xml